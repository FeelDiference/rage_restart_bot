#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Rage Restart Bot –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ó–∞–ø—É—Å–∫–∞—Ç—å —Å –ø—Ä–∞–≤–∞–º–∏ sudo

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Rage Restart Bot"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -eq 0 ]]; then
   log_error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–¥ root!"
   log_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo ./scripts/setup.sh"
   exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
install_docker() {
    if command -v docker &> /dev/null; then
        log_info "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
        sudo apt-get update
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
        
        # –î–æ–±–∞–≤–ª—è–µ–º GPG –∫–ª—é—á Docker
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
        sudo usermod -aG docker $USER
        
        log_info "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
install_docker_compose() {
    if command -v docker-compose &> /dev/null; then
        log_info "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é
        DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)
        sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        
        # –î–µ–ª–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
        sudo chmod +x /usr/local/bin/docker-compose
        
        log_info "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
setup_directories() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    PROJECT_DIR="/opt/rage-restart-bot"
    sudo mkdir -p $PROJECT_DIR
    sudo chown $USER:$USER $PROJECT_DIR
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    cd $PROJECT_DIR
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p {logs,config,data,scripts}
    
    log_info "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞: $PROJECT_DIR"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
clone_repository() {
    log_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    if [ -d ".git" ]; then
        log_info "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º..."
        git pull
    else
        # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        REPO_URL="https://github.com/YOUR_USERNAME/rage-restart-bot.git"
        log_warn "–ò–∑–º–µ–Ω–∏—Ç–µ REPO_URL –≤ —Å–∫—Ä–∏–ø—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!"
        log_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑: $REPO_URL"
        
        git clone $REPO_URL .
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
setup_config() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π
    if [ ! -f "config/config.yaml" ]; then
        cp config/config.yaml config/config.yaml.example
        log_warn "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å config/config.yaml!"
        log_info "–ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω: config/config.yaml.example"
    fi
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è docker-compose
    if [ ! -f ".env" ]; then
        cat > .env << EOL
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Rage Restart Bot

# Timezone
TZ=Europe/Moscow

# Docker network
COMPOSE_PROJECT_NAME=rage-bot

# –†–µ—Å—É—Ä—Å—ã
BOT_MEMORY_LIMIT=256m
BOT_CPU_LIMIT=0.5

EOL
        log_info "–§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞
setup_systemd() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    sudo tee /etc/systemd/system/rage-bot.service > /dev/null << EOL
[Unit]
Description=Rage Restart Bot
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/opt/rage-restart-bot
ExecStart=/usr/local/bin/docker-compose up -d
ExecStop=/usr/local/bin/docker-compose down
ExecReload=/usr/local/bin/docker-compose restart
TimeoutStartSec=0
User=$USER
Group=$USER

[Install]
WantedBy=multi-user.target
EOL

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd –∏ –≤–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
    sudo systemctl daemon-reload
    sudo systemctl enable rage-bot.service
    
    log_info "Systemd —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≤–∫–ª—é—á–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥—Ä–æ—Ç–∞—Ü–∏–∏
setup_logrotate() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
    
    sudo tee /etc/logrotate.d/rage-bot > /dev/null << EOL
/opt/rage-restart-bot/logs/*.log {
    daily
    missingok
    rotate 7
    compress
    notifempty
    create 644 $USER $USER
    postrotate
        /usr/local/bin/docker-compose -f /opt/rage-restart-bot/docker-compose.yml restart rage-bot > /dev/null 2>&1 || true
    endscript
}
EOL

    log_info "–†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_info "–ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –û–°
    if [[ ! -f /etc/os-release ]]; then
        log_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
        exit 1
    fi
    
    . /etc/os-release
    if [[ $ID != "ubuntu" && $ID != "debian" ]]; then
        log_warn "–°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ Ubuntu/Debian"
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    install_docker
    install_docker_compose
    setup_directories
    clone_repository
    setup_config
    setup_systemd
    setup_logrotate
    
    log_info "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    log_warn "–ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
    log_warn "1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å config/config.yaml —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
    log_warn "2. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å: sudo systemctl start rage-bot"
    log_warn "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: sudo systemctl status rage-bot"
    log_warn "4. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏: docker-compose logs -f"
    
    if groups $USER | grep &>/dev/null '\bdocker\b'; then
        log_info "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ docker"
    else
        log_warn "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã docker"
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"